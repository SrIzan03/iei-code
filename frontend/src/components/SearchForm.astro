---
import Select from "./Select.astro";

// Initialize with empty array, we'll populate it client-side
const types = [];
---

<form id="searchForm" class="bg-white rounded-lg p-6 shadow-md">
    <div class="flex flex-col space-y-4">
        <div class="flex gap-3 max-w-sm mx-auto justify-center items-center">
            <label for="localidad">Localidad</label>
            <input 
                type="text"
                placeholder="Add text" 
                id="localidad" 
                class="border border-gray-300 rounded-lg p-2"
            />
        </div>
        <div class="flex gap-3 max-w-sm mx-auto justify-center items-center">
            <label for="codigoPostal">Cod. Postal</label>
            <input 
                type="text"
                placeholder="Add text" 
                id="codigoPostal" 
                class="border border-gray-300 rounded-lg p-2"
            />
        </div>
        <div class="flex gap-3 max-w-sm mx-auto justify-center items-center">
            <label for="provincia">Provincia</label>
            <input 
                type="text"
                placeholder="Add text" 
                id="provincia" 
                class="border border-gray-300 rounded-lg p-2"
            />
        </div>
        <div class="flex gap-3 max-w-sm mx-auto justify-center items-center">
            <Select 
                label="Tipo" 
                id="tipos" 
                options={types} 
            />
        </div>
        <div class="flex gap-4 pt-2">
            <a class="flex-1 bg-gray-300 text-black rounded-lg hover:bg-gray-400 transition-colors items-center justify-center" href="/">
                <button 
                    type="button"
                    onclick="document.getElementById('searchForm').reset()"
                    class="flex-1 w-full text-black py-2 px-4 rounded-lg hover:bg-grey-600 transition-colors"
                >
                    Cancelar
                </button>
        </a>
            <button 
                type="submit"
                class="flex-1 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors"
            >
                Buscar
            </button>
        </div>
    </div>
</form>

<script>
    async function loadTypes() {
        try {
            const response = await fetch('http://localhost:8080/types');
            const data = await response.json();
            const selectElement = document.getElementById('tipos');
            if (selectElement) {
                data.types.forEach((type: string) => {
                    const option = document.createElement('option');
                    option.value = type;
                    option.textContent = type;
                    selectElement.appendChild(option);
                });
            }
        } catch (error) {
            console.error('Error loading types:', error);
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        loadTypes();
        const form = document.getElementById('searchForm');
        
        form?.addEventListener('submit', async (e: Event) => {
            e.preventDefault();
            
            const localidad = (document.getElementById('localidad') as HTMLInputElement).value;
            const codigoPostal = (document.getElementById('codigoPostal') as HTMLInputElement).value;
            const provincia = (document.getElementById('provincia') as HTMLInputElement).value;
            const tipo = (document.getElementById('tipos') as HTMLSelectElement).value;

            try {
                const queryParams = new URLSearchParams();
                if (localidad) queryParams.append('localidad', localidad);
                if (codigoPostal) queryParams.append('codigo_postal', codigoPostal);
                if (provincia) queryParams.append('provincia', provincia);
                if (tipo) queryParams.append('tipo', tipo);

                const response = await fetch(`http://localhost:8080/monuments?${queryParams}`);
                const data = await response.json();
                
                // Update results table
                const resultsTable = document.getElementById('resultsTable');
                if (resultsTable) {
                    resultsTable.innerHTML = data.monuments.map((monument: any) => `
                        <tr class="border-b">
                            <td class="py-2 px-4">${monument.nombre}</td>
                            <td class="py-2 px-4">${monument.tipo}</td>
                            <td class="py-2 px-4">${monument.direccion || '-'}</td>
                            <td class="py-2 px-4">${monument.codigo_postal}</td>
                            <td class="py-2 px-4">${monument.localidad}</td>
                            <td class="py-2 px-4">${monument.provincia}</td>
                            <td class="py-2 px-4">${monument.longitud}</td>
                            <td class="py-2 px-4">${monument.latitud}</td>
                            <td class="py-2 px-4 block h-[100px] overflow-y-scroll">${monument.descripcion || '-'}</td>
                        </tr>
                    `).join('');
                }

                // Update map markers
                window.monumentMap.map.eachLayer((layer: any) => {
                    if (layer instanceof L.Marker) {
                        layer.remove();
                    }
                });

                data.monuments.forEach((monument: any) => {
                    window.monumentMap.addMarker(
                        monument.latitud,
                        monument.longitud,
                        monument.nombre,
                        monument.descripcion,
                        monument.tipo
                    );
                });
            } catch (error) {
                console.error('Error searching monuments:', error);
            }
        });
    });
</script> 